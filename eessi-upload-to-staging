#!/bin/bash

if [[ $# -lt 1 ]]; then
    echo "Usage: $0 <filenames>" >&2
    exit 1
fi

function upload_to_staging_bucket
{
  file=$1
  path=$2
  bucket='eessi-staging'
  region='eu-west-1'
  date=$(date +"%a, %d %b %Y %T %z")
  content_type='application/x-compressed-tar'

  acl="x-amz-acl:private"
  string="PUT\n\n${content_type}\n${date}\n${acl}\n/${bucket}/${path}"
  
  if ! [ -z "$AWS_ACCESS_KEY_ID" ]; then
    signature=$(echo -en "${string}" | openssl sha1 -hmac "${AWS_SECRET_ACCESS_KEY}" -binary | base64)
    authstring="-H \"Authorization: AWS ${AWS_SECRET_ACCESS_KEY}:$signature\""
    aclstring="-H \"${acl}\""
  fi

  echo "Attempting to create: https://${bucket}.s3.amazonaws.com/${path}"
  if type -a aws > /dev/null; then
    aws s3 cp "$file" s3://${bucket}/${path}
  else
  curl -X PUT -T "$file" \
    -H "Host: ${bucket}.s3.amazonaws.com" \
    -H "Date: ${date}" \
    -H "Content-Type: ${content_type}" \
    $aclstring \
    $authstring \
    "https://${bucket}.s3.amazonaws.com/${path}"
  fi
}

# This needs expanding etc.
function check_file_name
{
  filename=$1
  if ( echo $filename | grep ^eessi > /dev/null && 
    echo $filename | grep -E '(compat|software)' > /dev/null ); then
    return 0
  else
    return 1
  fi
}

for file in "$*"; do
  # eessi-${pilot_version}-software-${os}-`echo ${cpu_arch_subdir} | tr '/' '-'`-${timestamp}.tar.gz" 
  if [[ -r "$file" && -f "$file" &&  -s "$file" ]]; then
    basefile=$( basename $file )
    if check_file_name $basefile; then
      if tar tf "$file" > /dev/null; then
        aws_path=$(basename $file | tr -s '-' '/' | perl -pe 's/^eessi.//;')
        echo $aws_path
        upload_to_staging_bucket "${file}" "${aws_path}"
      else
        echo "'$file' is not a tar file."
        exit 1
      fi
    else
      echo "$file does not look like an eessi layer filename!"
      exit 1
    fi
  else
      echo "'$file' is not a readable non zero-sized file."
      exit 1
  fi
done
